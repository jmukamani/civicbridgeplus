name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: --health-cmd "mongo admin --eval 'db.stats().ok'" --health-interval 10s --health-timeout 5s --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run tests
      env:
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        DB_HOST: localhost
        DB_PORT: 5432
        MONGO_URI: mongodb://localhost:27017/test_db
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test_secret
      run: npm test -- --coverage --forceExit
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3